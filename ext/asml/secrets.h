// Generated by `wit-bindgen` 0.8.0. DO NOT EDIT!
#ifndef __BINDINGS_SECRETS_H
#define __BINDINGS_SECRETS_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} secrets_string_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} secrets_list_u8_t;

typedef struct {
  bool is_some;
  secrets_list_u8_t val;
} secrets_option_list_u8_t;

typedef struct {
  secrets_string_t id;
  secrets_option_list_u8_t value;
} akkoro_secrets_secret_storage_secret_t;

typedef secrets_string_t akkoro_secrets_secret_storage_key_t;

typedef uint8_t akkoro_secrets_secret_storage_error_t;

#define AKKORO_SECRETS_SECRET_STORAGE_ERROR_SUCCESS 0
#define AKKORO_SECRETS_SECRET_STORAGE_ERROR_INVALID_ARGUMENT 1
#define AKKORO_SECRETS_SECRET_STORAGE_ERROR_FORBIDDEN 2

// Imported Functions from `akkoro:secrets/secret-storage`
// Return the secret value associated with the handle
bool akkoro_secrets_secret_storage_get_secret_value(secrets_string_t *id, akkoro_secrets_secret_storage_secret_t *ret, akkoro_secrets_secret_storage_error_t *err);
// Set the secret value associated with the handle
bool akkoro_secrets_secret_storage_set_secret_value(secrets_string_t *id, secrets_list_u8_t *value, akkoro_secrets_secret_storage_key_t *key, akkoro_secrets_secret_storage_secret_t *ret, akkoro_secrets_secret_storage_error_t *err);

// Helper Functions

void secrets_list_u8_free(secrets_list_u8_t *ptr);
void secrets_option_list_u8_free(secrets_option_list_u8_t *ptr);
void akkoro_secrets_secret_storage_secret_free(akkoro_secrets_secret_storage_secret_t *ptr);
void akkoro_secrets_secret_storage_key_free(akkoro_secrets_secret_storage_key_t *ptr);
void secrets_string_set(secrets_string_t *ret, const char*s);
void secrets_string_dup(secrets_string_t *ret, const char*s);
void secrets_string_free(secrets_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
