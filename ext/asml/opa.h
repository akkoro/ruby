// Generated by `wit-bindgen` 0.8.0. DO NOT EDIT!
#ifndef __BINDINGS_OPA_H
#define __BINDINGS_OPA_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} opa_string_t;

typedef uint8_t akkoro_opa_module_policy_error_t;

#define AKKORO_OPA_MODULE_POLICY_ERROR_INVALID_WASM 0
#define AKKORO_OPA_MODULE_POLICY_ERROR_NO_ENTRYPOINT 1

typedef struct {
  opa_string_t *ptr;
  size_t len;
} opa_list_string_t;

typedef struct {
  opa_string_t id;
  opa_list_string_t entrypoints;
} akkoro_opa_module_policy_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} opa_list_u8_t;

// Imported Functions from `akkoro:opa/module`
bool akkoro_opa_module_new_policy(opa_list_u8_t *bytes, akkoro_opa_module_policy_t *ret, akkoro_opa_module_policy_error_t *err);
void akkoro_opa_module_eval(opa_string_t *id, opa_string_t *data, opa_string_t *input, opa_string_t *ret);

// Helper Functions

void opa_list_string_free(opa_list_string_t *ptr);
void akkoro_opa_module_policy_free(akkoro_opa_module_policy_t *ptr);
void opa_list_u8_free(opa_list_u8_t *ptr);
void opa_string_set(opa_string_t *ret, const char*s);
void opa_string_dup(opa_string_t *ret, const char*s);
void opa_string_free(opa_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
